// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  INDUSTRY_REP
  INDUSTRY_USER
  ACADEMIC_REP
  ACADEMIC_USER
  ACADEMIC_STUDENT
}

enum OrgType {
  INDUSTRY
  ACADEMIC
}

model User {
  userId                     Int              @id @default(autoincrement())
  firstName                  String
  lastName                   String
  email                      String           @unique
  website                    String?
  department                 String?
  supervisors                User[]           @relation("Supervisors")
  supervisees                User[]           @relation("Supervisors")
  password                   String
  createAt                   DateTime         @default(now())
  updatedAt                  DateTime         @default(now()) @updatedAt
  role                       Role             @default(ACADEMIC_USER)
  organization               Organization     @relation(fields: [orgId], references: [id])
  orgId                      Int
  isPoc                      Boolean          @default(false)
  isVerified                 Boolean          @default(false)
  isEmailVerified            Boolean          @default(false)
  areaOfInterest             AreaOfInterest[]
  areaOfInterestCreated      AreaOfInterest[] @relation("Creator")
  academicSupervisedProjects Project[]        @relation("AcademicSupervisor")
  industrySupervisedProjects Project[]        @relation("IndustrySupervisor")
  industryProjects           Project[]        @relation("IndustryUsers")
  academicProjects           Project[]        @relation("AcademicUsers")
}

model Organization {
  id               Int       @id @default(autoincrement())
  name             String    @unique
  type             OrgType   @default(ACADEMIC)
  location         String
  createAt         DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  users            User[]
  industryProjects Project[] @relation("ProjectIndustryOrg")
  academicProjects Project[] @relation("ProjectAcademicOrg")
}

model AreaOfInterest {
  id              Int       @id @default(autoincrement())
  title           String    @unique
  description     String
  createAt        DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  users           User[]
  projects        Project[]
  createdBy       User      @relation("Creator", fields: [createdByUserId], references: [userId])
  createdByUserId Int
}

enum ProjectStatus {
  DRAFT
  VERFICATION_PENDING
  ONGOING
  COMPLETED
}

model Project {
  id                   Int              @id @default(autoincrement())
  title                String
  summary              String
  startDate            String?
  endDate              String?
  industryOrg          Organization?    @relation("ProjectIndustryOrg", fields: [industryOrgId], references: [id])
  industryOrgId        Int?
  academicOrg          Organization?    @relation("ProjectAcademicOrg", fields: [academicOrgId], references: [id])
  academicOrgId        Int?
  academicSupervisorId Int?
  academicSupervisor   User?            @relation("AcademicSupervisor", fields: [academicSupervisorId], references: [userId])
  industrySupervisorId Int?
  industrySupervisor   User?            @relation("IndustrySupervisor", fields: [industrySupervisorId], references: [userId])
  industryUsers        User[]           @relation("IndustryUsers")
  academicUsers        User[]           @relation("AcademicUsers")
  progressUpdates      String[]
  projectProposalLink  String?
  areaOfInterest       AreaOfInterest[]
  status               ProjectStatus    @default(DRAFT)
}
